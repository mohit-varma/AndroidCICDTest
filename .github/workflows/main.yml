#name: Release (Production)
#
#on:
#  push:
#    branches:
#      - 'main'
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: actions/setup-ruby@v1
#        with:
#          ruby-version: '2.5'
#
#      - name: Cache Ruby - Bundler
#        uses: actions/cache@v2
#        with:
#          path: vendor/bundle
#          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-gems-
#
#      - name: Cache Gradle
#        uses: actions/cache@v1
#        with:
#          path: ~/.gradle/caches/
#          key: cache-clean-gradle-${{ matrix.os }}-${{ matrix.jdk }}
#
#      - name: Cache Gradle Wrapper
#        uses: actions/cache@v1
#        with:
#          path: ~/.gradle/wrapper/
#          key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}
#
#      - name: Grant Permission to Execute
#        run: chmod +x gradlew
#
#      - name: Install bundle
#        run: |
#          bundle config path vendor/bundle
#          bundle install --jobs 4 --retry 3
#
#      - name: Configure Keystore
#        run: |
#          echo "SIGNING_KEY_STORE_BASE64" > keystore.jks.b64
#          base64 -d -i keystore.jks.b64 > repnet.jks
#          echo "storeFile=repnet.jks" >> keystore.properties
#          echo "keyAlias=SIGNING_KEY_ALIAS" >> keystore.properties
#          echo "storePassword=SIGNING_STORE_PASSWORD" >> keystore.properties
#          echo "keyPassword=SIGNING_KEY_PASSWORD" >> keystore.properties
#        env:
#          SIGNING_KEY_STORE_BASE64: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
#          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
#          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
#          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

#      - name: Create Google Play Config file
#        run : |
#          echo "$PLAY_CONFIG_JSON" > play_config.json.b64
#          base64 -d -i play_config.json.b64 > play_config.json
#        env:
#          PLAY_CONFIG_JSON: ${{ secrets.PLAY_CONFIG_JSON }}
#
#      - name: Distribute app to Production
#        run: bundle exec fastlane production

name: Generated APK AAB (Upload - Create Artifact To Github Action)

env:
  # The name of the main module repository
  main_project_module: app

on:

  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '10 days' # '<number> <unit>', e.g. 5 days, 2 years, 90 seconds, parsed by Moment.js
          # Optional inputs
          # skip-tags: true
          # skip-recent: 5

      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      #      - name: Configure Keystore
      #        run: |
      #          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
      #          base64 -d -i keystore.jks.b64 > app/keystore.jks
      #          echo "storeFile=keystore.jks" >> keystore.properties
      #          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
      #          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
      #          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
      #        env:
      #          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
      #          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
      #          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
      #          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

#      - name: Configure Keystore
#        run: |
#          echo "$SIGNING_KEY_STORE_BASE64" > keystore.jks.b64
#          base64 -d -i keystore.jks.b64 > repnet.jks
#          echo "storeFile=repnet.jks" >> keystore.properties
#          echo "keyAlias=SIGNING_KEY_ALIAS" >> keystore.properties
#          echo "storePassword=SIGNING_STORE_PASSWORD" >> keystore.properties
#          echo "keyPassword=SIGNING_KEY_PASSWORD" >> keystore.properties
#        env:
#          SIGNING_KEY_STORE_BASE64: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
#          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
#          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
#          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      #      - name: Upload Release Build to Artifacts
      #        uses: actions/upload-artifact@v3
      #        with:
      #          name: release-artifacts
      #          paths: |
      #            app/build/outputs/apk/release/
      #            app/build/outputs/bundle/release/
      #      #4
      #      - name: Create Github Release
      #        uses: softprops/action-gh-release@v1
      #        with:
      #          generate_release_notes: true
      #          prerelease: true
      #          files: |
      #            app/build/outputs/apk/release/app-release.apk
      #            app/build/outputs/bundle/release/app-release.aab

      #      # Upload Artifact Build
      #      # Noted For Output [main_project_module]/build/outputs/apk/debug/
      #      - name: Upload APK Debug - ${{ env.repository_name }}
      #        uses: actions/upload-artifact@v3
      #        with:
      #          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
      #          path: ${{ env.main_project_module }}/build/outputs/apk/debug/

      #      # Noted For Output [main_project_module]/build/outputs/apk/release/
      #      - name: Upload APK Release - ${{ env.repository_name }}
      #        uses: actions/upload-artifact@v3
      #        with:
      #          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
      #          path: ${{ env.main_project_module }}/build/outputs/apk/release/

      # Noted For Output [main_project_module]/build/outputs/bundle/release/
      - name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - App bundle(s) AAB release generated
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/